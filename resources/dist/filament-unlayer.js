const defaultScriptUrl="https://editor.unlayer.com/embed.js",callbacks=[];let loaded=!1;const isScriptInjected=e=>{const t=document.querySelectorAll("script");let a=!1;return t.forEach((t=>{t.src.includes(e)&&(a=!0)})),a},addCallback=e=>{callbacks.push(e)},runCallbacks=()=>{if(loaded){let e;for(;e=callbacks.shift();)e()}};export const loadScript=(e,t=defaultScriptUrl)=>{if(addCallback(e),isScriptInjected(t))runCallbacks();else{const e=document.createElement("script");e.setAttribute("src",t),e.onload=()=>{loaded=!0,runCallbacks()},document.head.appendChild(e)}};export default function initUnlayer({state:e,displayMode:t,id:a,uploadUrl:l}){return{state:e,init(){const e=this;loadScript((()=>{unlayer.init({id:a,displayMode:t}),unlayer.registerCallback("image",((e,t)=>{uploadImage(e.attachments[0],l).then((e=>t({progress:100,url:e}))).catch((e=>console.error("Image upload failed:",e)))}));let n=!1,r=!0;e.$watch("state",(t=>{if(!n){let l=void 0!==t.design?t.design:t;unlayer.loadDesign(JSON.parse(JSON.stringify(l))),r=!1,unlayer.exportHtml((t=>{n=!0,e.state&&(e.state={html:t.html,design:JSON.parse(JSON.stringify(t.design))});let l=document.getElementById(a);l&&(l.dirty=!0),r=!1}))}n=!1})),unlayer.addEventListener("design:updated",(()=>{unlayer.exportHtml((t=>{if(r||(n=!0),e.state){if("string"==typeof e.state){const t=JSON.parse(e.state);e.state={html:t.html,design:JSON.parse(JSON.stringify(t.design))}}e.state=r?{html:e.state.html,design:JSON.parse(JSON.stringify(e.state.design))}:{html:t.html,design:JSON.parse(JSON.stringify(t.design))}}let l=document.getElementById(a);l&&(l.dirty=!0),r=!1}))}))}))}}}function uploadImage(e,t){let a=new FormData;return a.append("file",e),fetch(t,{method:"POST",headers:{Accept:"application/json","X-CSRF-TOKEN":document.querySelector('meta[name="csrf-token"]').getAttribute("content")},body:a}).then((e=>{if(e.ok)return e.json();throw new Error("Network response was not ok.")})).then((e=>e.file.url))}
